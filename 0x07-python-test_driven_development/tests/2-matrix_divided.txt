# 2-matrix_divided.txt
================================
 How to Use 2-matrix_divided.py
================================

Using function called ''matrix_divided()''.

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided()
Traceback (most recent call last):
          ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'H')
Traceback (most recent call last):
          ...
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
          ...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9, 10]], 3)
Traceback (most recent call last):
          ...
TypeError: Each row of the matrix must have the same size

""" infinite elements to divide """
>>> matrix = [[1e400, 1e500, 1e600],[1e900, 1e800, 1e700]]

>>> matrix_divided(matrix, 3)
[[inf, inf, inf], [inf, inf, inf]]

Section // Incorrect Matrix
============================
""" with a matrix as a string """
>>> matrix = 'Monty Python'
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
          ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

""" with the rows of an inconsistent size matrix """
>>> matrix = [[1, 2, 3], 4, 5, 6]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
          ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

""" with lists of integers and floats within """
""" the rows of the matrix """
>>> matrix = [[[10.0], [65], [37.0]],[[40], [15.0], [66]]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
          ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

""" with strings within the rows of the matrix """
>>> matrix = [['1', '2', '3'], ['4', '5', '6']]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
          ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

""" with integers instead of lists in the matrix """
>>> matrix = [1, 2, 3, 4, 5, 6]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
          ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

""" with a string acting as a row """
>>> matrix = [[1, 2, 3], [4, 5, 6], 'Monty Python']
>>> matrix_divided('matrix', 2)
Traceback (most recent call last):
          ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

""" with a matrix of empty lists """
>>> matrix = []
>>> type(matrix_divided(matrix, 3))
Traceback (most recent call last):
          ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

""" with a matrix of empty lists """
>>> matrix = [[], []]
>>> type(matrix_divided(matrix, 3))
Traceback (most recent call last):
          ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

""" with an empty matrix """
>>> matrix_divided([], 3)
Traceback (most recent call last):
          ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Bad Divisor
=============
""" with a 'None' divider """
>>> matrix = [[1, 2, 54.0], [24, 35.5, 6]]
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
          ...
TypeError: div must be a number

""" with a string divider """
>>> matrix = [[1, 2, 54.0], [24, 35.5, 6]]
>>> matrix_divided(matrix, 'Monty Python')
Traceback (most recent call last):
          ...
TypeError: div must be a number

""" with a zero as a divisor """
>>> matrix = [[10.0, 65, 37.0],[40, 15.0, 66]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
          ...
ZeroDivisionError: division by zero
